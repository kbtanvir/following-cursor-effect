!(function ($) {
  new (class {
    constructor(a) {
      (this.options = $.extend(
        !0,
        {
          container: "body",
          speed: 0.7,
          ease: "expo.out",
          visibleTimeout: 300,
        },
        a
      )),
        (this.body = $(this.options.container)),
        (this.el = $('<div class="cb-cursor"></div>')),
        (this.text = $(`<div class="cb-cursor-text"></div>`)),
        this.init();
    }
    init() {
      this.el.append(this.text),
        this.body.append(this.el),
        this.bind(),
        this.move(-window.innerWidth, -window.innerHeight, 0),
        this.prepare();
    }
    bind() {
      let a = this;
      this.body
        .on("mouseleave", () => {
          a.hide();
        })
        .on("mouseenter", () => {
          a.show();
        })
        .on("mousemove", a => {
          (this.pos = {
            x: this.stick
              ? this.stick.x - (this.stick.x - a.clientX) * 0.15
              : a.clientX,
            y: this.stick
              ? this.stick.y - (this.stick.y - a.clientY) * 0.15
              : a.clientY,
          }),
            this.update();
        })
        .on("mousedown", () => {
          a.setState("-active");
        })
        .on("mouseup", () => {
          a.removeState("-active");
        })
        .on("mouseenter", "a,input,textarea,button", () => {
          a.setState("-pointer");
        })
        .on("mouseleave", "a,input,textarea,button", () => {
          a.removeState("-pointer");
        })
        .on("mouseenter", "iframe", () => {
          a.hide();
        })
        .on("mouseleave", "iframe", () => {
          a.show();
        })
        .on("mouseenter", "[data-cursor]", function () {
          a.setState(this.dataset.cursor);
        })
        .on("mouseleave", "[data-cursor]", function () {
          a.removeState(this.dataset.cursor);
        })
        .on("mouseenter", "[data-cursor-text]", function () {
          a.setText(this.dataset.cursorText);
        })
        .on("mouseleave", "[data-cursor-text]", function () {
          a.removeText();
        })
        .on("mouseenter", "[data-cursor-stick]", function () {
          a.setStick(this.dataset.cursorStick);
        })
        .on("mouseleave", "[data-cursor-stick]", function () {
          a.removeStick();
        });
    }
    setState(a) {
      this.el.addClass(a);
    }
    removeState(a) {
      this.el.removeClass(a);
    }
    toggleState(a) {
      this.el.toggleClass(a);
    }
    setText(a) {
      this.text.html(a), this.el.addClass("-text");
    }
    removeText() {
      this.el.removeClass("-text");
    }
    setStick(c) {
      let a = $(c),
        b = a.get(0).getBoundingClientRect();
      (this.stick = { y: b.top + a.height() / 2, x: b.left + a.width() / 2 }),
        this.move(this.stick.x, this.stick.y, 5);
    }
    removeStick() {
      this.stick = !1;
    }
    update() {
      this.move(), this.show();
    }
    move(a, b, c) {
      gsap.to(this.el, {
        x: a || this.pos.x,
        y: b || this.pos.y,
        force3D: !0,
        overwrite: !0,
        ease: this.options.ease,
        duration: this.visible ? c || this.options.speed : 0,
      });
    }
    show() {
      this.visible ||
        (clearInterval(this.visibleInt),
        this.el.addClass("-visible"),
        (this.visibleInt = setTimeout(() => (this.visible = !0))));
    }
    hide() {
      clearInterval(this.visibleInt),
        this.el.removeClass("-visible"),
        (this.visibleInt = setTimeout(
          () => (this.visible = !1),
          this.options.visibleTimeout
        ));
    }
    prepare() {
      $("a").attr("data-cursor", "-opaque");
    }
  })();
})(jQuery);
